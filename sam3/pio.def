R32(0x0000, PER,  W,  enable)
R32(0x0004, PDR,  W,  disable)
R32(0x0008, PSR,  R,  status)
RES_1(0x000C)
R32(0x0010, OER,  W,  output_enable)
R32(0x0014, ODR,  W,  output_disable)
R32(0x0018, OSR,  R,  output_status)
RES_1(0x001C)
R32(0x0020, IFER, W,  glitch_input_filter_enable)
R32(0x0024, IFDR, W,  glitch_input_filter_disable)
R32(0x0028, IFSR, R,  glitch_input_filter_status)
RES_1(0x002C)
R32(0x0030, SODR, W,  set_output_data)
R32(0x0034, CODR, W,  clear_output_data)
R32(0x0038, ODSR, RW, output_data_status)
R32(0x003C, PDSR, R,  pin_data_status)
R32(0x0040, IER,  W,  interrupt_enable)
R32(0x0044, IDR,  W,  interrupt_disable)
R32(0x0048, IMR,  R,  interrupt_mask)
R32(0x004C, ISR,  R,  interrupt_status)
R32(0x0050, MDER, W,  multi_driver_enable)
R32(0x0054, MDDR, W,  multi_driver_disable)
R32(0x0058, MDSR, R,  multi_driver_status)
RES_1(0x005C)
R32(0x0060, PUDR, W,  pull_up_disable)
R32(0x0064, PUER, W,  pull_up_enable)
R32(0x0068, PUSR, R,  pull_up_status)
RES_1(0x006C)
R32(0x0070, ABCDSR1, RW, peripheral_select_1)
R32(0x0074, ABCDSR2, RW, peripheral_select_2)
RES(0x0078, 0x007C)
R32(0x0080, IFSCDR, W, input_filter_slow_clock_disable)
R32(0x0084, IFSCER, W, input_filter_slow_clock_enable)
R32(0x0088, IFSCSR, W, input_filter_slow_clock_status)
R32(0x008C, SCDR, RW, slow_clock_divider_debouncing)
R32(0x0090, PPDDR, W, pad_pull_down_enable)
R32(0x0094, PPDER, W, pad_pull_down_disable)
R32(0x0098, PPDSR, R, pad_pull_down_status)
RES_1(0x009C)
R32(0x00A0, OWER, W, output_write_enable)
R32(0x00A4, OWDR, W, output_write_disable)
R32(0x00A8, OWSR, R, output_write_status)
RES_1(0x00AC)
R32(0x00B0, AIMER, W, additional_interrupt_modes_enable)
R32(0x00B4, AIMDR, W, additional_interrupt_modes_disable)
R32(0x00B8, AIMMR, R, additional_interrupt_modes_status)
RES_1(0x00BC)
R32(0x00C0, ESR,  W, edge_select)
R32(0x00C4, LSR,  W, level_select)
R32(0x00C8, ELSR, R, edge_level_status)
RES_1(0x00CC)
R32(0x00D0, FELLSR, W, falling_edge_low_level_select)
R32(0x00D4, REHLSR, W, risting_edge_high_level_select)
R32(0x00D8, FRLHSR, R, fall_rise_low_high_status)
RES_1(0x00DC)
R32(0x00E0, LOCKSR, R, lock_status)
R32(0x00E4, WPMR,   R, write_protect_mode)
R32(0x00E8, WPSR,   R, write_protect_status)
RES(0x00EC, 0x00F8)
RES_1(0x00FC) /* XXX: omitted from doc */
R32(0x00100, SCHMITT, RW, schmitt_trigger)
RES(0x0104, 0x010C)
RES_1(0x0110)
RES(0x0114, 0x011C)
RES(0x0120, 0x014C) /* XXX: omitted from doc */
R32(0x0150, PCMR, RW, parallel_capture_mode)
R32(0x0154, PCIER, W, parallel_capture_interrupt_enable)
R32(0x0158, PCIDR, W, parallel_capture_interrupt_disable)
R32(0x015C, PCIMR, R, parallel_capture_interrupt_mask)
R32(0x0160, PCISR, R, parallel_capture_interrupt_status)
R32(0x0164, PCRHR, R, parallel_capture_reception_holding)
RES(0x0168, 0x018C)
