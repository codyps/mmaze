/* vim: set filetype=c:
 *
 * From the Freescale K66 Sub-Family Reference Manual
 * http://www.nxp.com/files/32bit/doc/ref_manual/K66P144M180SF5RMV2.pdf
 */
/*
 * VECTOR(addr, name)
 * VECTOR_NULL(addr)
 * IRQ(address, nvic non-ipr reg, nvic ipr-reg, name)
 * IRQ_START_ADDR(addr)
 * VECTOR_END(addr, vect_ct, irq_ct)
 */
#include <config/armv7m-vector.def>

IRQ_START_ADDR(0x40)
IRQ(0x40, dma_chan0_transfer_complete) /* 16 */
IRQ(0x44, dma_chan1_transfer_complete)
IRQ(0x48, dma_chan2_transfer_complete)
IRQ(0x4C, dma_chan3_transfer_complete)
IRQ(0x50, dma_chan4_transfer_complete)
IRQ(0x54, dma_chan5_transfer_complete)
IRQ(0x58, dma_chan6_transfer_complete)
IRQ(0x5C, dma_chan7_transfer_complete)
IRQ(0x60, dma_chan8_transfer_complete)
IRQ(0x64, dma_chan9_transfer_complete)
IRQ(0x68, dma_chan10_transfer_complete)
IRQ(0x6C, dma_chan11_transfer_complete)
IRQ(0x70, dma_chan12_transfer_complete)
IRQ(0x74, dma_chan13_transfer_complete)
IRQ(0x78, dma_chan14_transfer_complete)
IRQ(0x7C, dma_chan15_transfer_complete)
IRQ(0x80, dma_error)
IRQ(0x84, mcm)
IRQ(0x88, flash_command_complete)
IRQ(0x8C, flash_read_collision)
IRQ(0x90, low_voltage_detect)
IRQ(0x94, low_leakage_wakeup)
IRQ(0x98, watchdog)
IRQ(0x9C, rng)
IRQ(0xA0, i2c0)
IRQ(0xA4, i2c1)
IRQ(0xA8, spi0)
IRQ(0xAC, spi1)
IRQ(0xB0, i2s0_transmit)
IRQ(0xB4, i2s1_recieve)
VECTOR_NULL(0xB8)
IRQ(0xBC, uart0_status)
IRQ(0xC0, uart0_error)
IRQ(0xC4, uart1_status)
IRQ(0xC8, uart1_error)
IRQ(0xCC, uart2_status)
IRQ(0xD0, uart2_error)
IRQ(0xD4, uart3_status)
IRQ(0xD8, uart3_error)
IRQ(0xDC, adc0)
IRQ(0xE0, cmp0)
IRQ(0xE4, cmp1)
IRQ(0xE8, ftm0)
IRQ(0xEC, ftm1)
IRQ(0xF0, ftm2)
IRQ(0xF4, cmt)
IRQ(0xF8, rtc_alarm)
IRQ(0xFC, rtc_seconds)
IRQ(0x100, pit_chan0)
IRQ(0x104, pit_chan1)
IRQ(0x108, pit_chan2)
IRQ(0x10C, pit_chan3)
IRQ(0x110, pdb)
IRQ(0x114, usb_fs_otg)
IRQ(0x118, usb_fs_charger_detect)
VECTOR_NULL(0x11C)
IRQ(0x120, dac0)
IRQ(0x128, low_power_timer)
IRQ(0x12C, port_a_pin_detect)
IRQ(0x130, port_b_pin_detect)
IRQ(0x134, port_c_pin_detect)
IRQ(0x138, port_d_pin_detect)
IRQ(0x13C, port_e_pin_detect)
IRQ(0x140, software_int)
IRQ(0x144, spi2)
IRQ(0x148, uart4_status)
IRQ(0x14C, uart4_error)
VECTOR_NULL(0x150) 
VECTOR_NULL(0x154)
IRQ(0x158, cmp2)
IRQ(0x15C, ftm3)
IRQ(0x160, dac1)
IRQ(0x164, adc1)
IRQ(0x168, i2c2)
IRQ(0x16C, can0_msg_buf)
IRQ(0x170, can0_bus_off)
IRQ(0x174, can0_error)
IRQ(0x178, can0_tx_warning)
IRQ(0x17C, can0_rx_warning)
IRQ(0x180, can0_wake_up)
IRQ(0x184, sdhc)
IRQ(0x188, eth_mac_timer)
IRQ(0x18C, eth_mac_tx)
IRQ(0x190, eth_mac_rx)
IRQ(0x194, eth_mac_misc_error)
IRQ(0x198, lpuart0)
IRQ(0x19C, tsi0)
IRQ(0x1A0, tpm1)
IRQ(0x1A4, tpm2)
IRQ(0x1A8, usb_hs_dcd_phy)
IRQ(0x1AC, i2c3)
IRQ(0x1B0, cmp3)
IRQ(0x1B4, usb_hs_otg)
IRQ(0x1B8, can1_msg_buf)
IRQ(0x1BC, can1_bus_off)
IRQ(0x1C0, can1_error)
IRQ(0x1C4, can1_tx_warning)
IRQ(0x1C8, can1_rx_warning)
IRQ(0x1CC, can1_wake_up)
VECTOR_END(0x1CC, 115, 99)

